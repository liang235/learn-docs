import{_ as d,c as n,o as l,a2 as a}from"./chunks/framework.CXlnX6pr.js";const p=JSON.parse('{"title":"null 和 undefined 的区别","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/null-undefined.md","filePath":"javascript/null-undefined.md"}'),o={name:"javascript/null-undefined.md"};function i(c,e,t,u,r,f){return l(),n("div",null,e[0]||(e[0]=[a('<h1 id="null-和-undefined-的区别" tabindex="-1">null 和 undefined 的区别 <a class="header-anchor" href="#null-和-undefined-的区别" aria-label="Permalink to &quot;null 和 undefined 的区别&quot;">​</a></h1><p><code>null</code> 表示无对象，<code>undefined</code> 表示无值，这是在语义上的区别，这是一个设计上的缺陷</p><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><ul><li><code>undefined</code>：当一个变量被声明但未被赋值时，其默认值为 <code>undefined</code>。此外，当访问对象的属性不存在时，也会返回 <code>undefined</code>。因此，<code>undefined</code> 通常表示意料之中的缺失值或未初始化的变量</li><li><code>null</code>：<code>null</code> 表示一个有意赋予的空值，表示值的缺失是有意为之的。当您希望将一个变量的值清空或表示一个变量没有引用任何对象时，可以使用 null</li><li>总的来说，<code>undefined</code> 是 <code>JavaScript</code> 自动赋予的缺失值，而 <code>null</code> 是开发者主动赋予的空值。在编程时，根据实际情况选择使用它们</li></ul>',4)]))}const h=d(o,[["render",i]]);export{p as __pageData,h as default};
