import{_ as s,c as n,o as e,a2 as p}from"./chunks/framework.CXlnX6pr.js";const b=JSON.parse('{"title":"autoprefixer","description":"","frontmatter":{},"headers":[],"relativePath":"package/autoprefixer.md","filePath":"package/autoprefixer.md"}'),r={name:"package/autoprefixer.md"};function t(i,a,l,c,o,u){return e(),n("div",null,a[0]||(a[0]=[p(`<h1 id="autoprefixer" tabindex="-1">autoprefixer <a class="header-anchor" href="#autoprefixer" aria-label="Permalink to &quot;autoprefixer&quot;">​</a></h1><p><code>css</code> 自动添加浏览器前缀</p><h2 id="安装-官网地址" tabindex="-1">安装 <a href="https://github.com/postcss/autoprefixer#readme" target="_blank" rel="noreferrer">官网地址</a> <a class="header-anchor" href="#安装-官网地址" aria-label="Permalink to &quot;安装 [官网地址](https://github.com/postcss/autoprefixer#readme)&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm install autoprefixer -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p><code>vite.config.js</code> 中引入</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import autoprefixer from &#39;autoprefixer&#39; // 处理 css 前缀</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default defineConfig(({ command, mode }) =&gt; {</span></span>
<span class="line"><span>	const env = loadEnv(mode, __dirname)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	return {</span></span>
<span class="line"><span>		css: {</span></span>
<span class="line"><span>			// 内联的 PostCSS 配置</span></span>
<span class="line"><span>			postcss: {</span></span>
<span class="line"><span>				plugins: [autoprefixer],</span></span>
<span class="line"><span>			},</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,7)]))}const m=s(r,[["render",t]]);export{b as __pageData,m as default};
