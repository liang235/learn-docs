import{_ as o,c as t,o as c,a2 as d}from"./chunks/framework.CXlnX6pr.js";const m=JSON.parse('{"title":"vueuse 工具库","description":"","frontmatter":{},"headers":[],"relativePath":"vueuse/index.md","filePath":"vueuse/index.md"}'),a={name:"vueuse/index.md"};function s(n,e,r,p,u,i){return c(),t("div",null,e[0]||(e[0]=[d('<h1 id="vueuse-工具库" tabindex="-1"><a href="https://www.vueusejs.com/" target="_blank" rel="noreferrer">vueuse</a> 工具库 <a class="header-anchor" href="#vueuse-工具库" aria-label="Permalink to &quot;[vueuse](https://www.vueusejs.com/) 工具库&quot;">​</a></h1><p>它是为 <code>Vue2</code> 和 <code>Vue3</code> 服务的一套 <code>Vue Composition API </code>的常用工具集</p><p><code>State (状态)</code> - 管理用户状态（全局，本地存储，会话存储）</p><p><code>Elements (元素)</code> - 是一个用于处理 DOM 元素的工具函数</p><p><code>Animation (动画)</code> - 包含易于使用的过渡、超时和计时功能</p><p><code>Browser (浏览器)</code> - 可以用于不同的屏幕控件、剪贴板、首选项等等</p><p><code>Component (组件)</code> - 为不同的组件方法提供简写</p><p><code>Sensors (传感器)</code> - 用来监听不同的DOM事件、输入事件和网络事件</p><p><code>Utility（实用方法</code>）- 不同的实用方法，如 <code>getters</code>、<code>conditionals</code>、<code>ref synchronization</code>等</p><p><code>Watch</code> - 更高级的观察器类型，如可暂停的观察器、放弃的观察器和条件观察器</p>',10)]))}const f=o(a,[["render",s]]);export{m as __pageData,f as default};
