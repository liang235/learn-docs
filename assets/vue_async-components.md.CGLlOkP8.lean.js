import{_ as a,c as n,o as i,a2 as e}from"./chunks/framework.CXlnX6pr.js";const k=JSON.parse('{"title":"async-components","description":"","frontmatter":{},"headers":[],"relativePath":"vue/async-components.md","filePath":"vue/async-components.md"}'),t={name:"vue/async-components.md"};function p(l,s,o,r,h,c){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="async-components" tabindex="-1">async-components <a class="header-anchor" href="#async-components" aria-label="Permalink to &quot;async-components&quot;">​</a></h1><p>异步组件</p><h2 id="什么是异步组件" tabindex="-1">什么是异步组件 <a class="header-anchor" href="#什么是异步组件" aria-label="Permalink to &quot;什么是异步组件&quot;">​</a></h2><p>在大型项目中，我们可能需要拆分应用为更小的块，并仅在需要时再从服务器加载相关组件</p><h2 id="哪些地方需要用到异步组件" tabindex="-1">哪些地方需要用到异步组件 <a class="header-anchor" href="#哪些地方需要用到异步组件" aria-label="Permalink to &quot;哪些地方需要用到异步组件&quot;">​</a></h2><p>不需要默认展示的都可以，比较常见的算是 <code>tabs</code></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineAsyncComponent } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AsyncComp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineAsyncComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./components/MyComponent.vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8)]))}const m=a(t,[["render",p]]);export{k as __pageData,m as default};
