import{_ as n,c as a,o as e,a2 as i}from"./chunks/framework.CXlnX6pr.js";const k=JSON.parse('{"title":"nvm","description":"","frontmatter":{},"headers":[],"relativePath":"other/nvm.md","filePath":"other/nvm.md"}'),t={name:"other/nvm.md"};function l(p,s,r,d,h,o){return e(),a("div",null,s[0]||(s[0]=[i(`<h1 id="nvm" tabindex="-1"><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">nvm</a> <a class="header-anchor" href="#nvm" aria-label="Permalink to &quot;[nvm](https://github.com/nvm-sh/nvm)&quot;">​</a></h1><p><code>node</code> 版本管理器</p><h2 id="mac-nvm-安装路径" tabindex="-1">mac nvm 安装路径 <a class="header-anchor" href="#mac-nvm-安装路径" aria-label="Permalink to &quot;mac nvm 安装路径&quot;">​</a></h2><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><table><thead><tr><th>命令</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td>nvm version</td><td style="text-align:left;">查看 nvm 版本</td></tr><tr><td>nvm list-remote</td><td style="text-align:left;">查看可以安装的 node 版本</td></tr><tr><td>nvm install xxx</td><td style="text-align:left;">安装指定版本的 node</td></tr><tr><td>nvm uninstall xxx</td><td style="text-align:left;">卸载 node 版本</td></tr><tr><td>nvm ls</td><td style="text-align:left;">查看已经安装可用的 node 版本</td></tr><tr><td>nvm use 18</td><td style="text-align:left;">切换 node 版本</td></tr><tr><td>nvm alias default 18</td><td style="text-align:left;">设置默认 node 版本</td></tr><tr><td>nvm list-remote</td><td style="text-align:left;">查看可以安装的 node 版本</td></tr><tr><td>nvm root</td><td style="text-align:left;">查看 nvm 安装路径</td></tr></tbody></table><h2 id="切换-node-版本安装包丢失的问题" tabindex="-1">切换 node 版本安装包丢失的问题 <a class="header-anchor" href="#切换-node-版本安装包丢失的问题" aria-label="Permalink to &quot;切换 node 版本安装包丢失的问题&quot;">​</a></h2><ul><li>一般是全局安装包的路径不对，只安装在了当前 <code>node</code> 版本的路径下，切换 <code>node</code> 版本之后就丢失了</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1.新建一个全局安装的路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mkdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.npm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">global </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2.配置 npm 使用新的路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm config set prefix </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~/.npm-global&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3.打开或者新建~/.profile，（vi ~/.profile）加入下面一行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=~/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.npm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">global</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:$PATH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4、更新系统环境变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.profile </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5.执行完第四部之后，有时候在打开终端还是需要再执行一下才会生效</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 6.打开 ~/.zshrc 这个文件，在 .zshrc 文件里后面添加 source ~/.profile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>不过上面的操作会提示 与 <code>nvm</code> 版本不兼容</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Your user’s .npmrc file (\${HOME}/.npmrc)</span></span>
<span class="line"><span>has a \`globalconfig\` and/or a \`prefix\` setting, which are incompatible with nvm.</span></span>
<span class="line"><span>Run \`nvm use --delete-prefix v18.18.2 --silent\` to unset it.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,10)]))}const m=n(t,[["render",l]]);export{k as __pageData,m as default};
