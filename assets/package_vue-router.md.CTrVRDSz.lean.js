import{_ as a,c as n,o as e,a2 as p}from"./chunks/framework.CXlnX6pr.js";const b=JSON.parse('{"title":"vue-router","description":"","frontmatter":{},"headers":[],"relativePath":"package/vue-router.md","filePath":"package/vue-router.md"}'),r={name:"package/vue-router.md"};function l(t,s,i,o,c,u){return e(),n("div",null,s[0]||(s[0]=[p(`<h1 id="vue-router" tabindex="-1">vue-router <a class="header-anchor" href="#vue-router" aria-label="Permalink to &quot;vue-router&quot;">​</a></h1><p><code>Vue.js</code> 的官方路由</p><h2 id="安装-官网地址" tabindex="-1">安装 <a href="https://router.vuejs.org/zh/" target="_blank" rel="noreferrer">官网地址</a> <a class="header-anchor" href="#安装-官网地址" aria-label="Permalink to &quot;安装 [官网地址](https://router.vuejs.org/zh/)&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm install vue-router</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="使用配置" tabindex="-1">使用配置 <a class="header-anchor" href="#使用配置" aria-label="Permalink to &quot;使用配置&quot;">​</a></h2><ul><li><code>src/router/index.js</code></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import { createRouter, createWebHashHistory } from &#39;vue-router&#39; // 路由</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/**</span></span>
<span class="line"><span> * 创建一个可以被 Vue 应用程序使用的路由实例</span></span>
<span class="line"><span> * @method createRouter(options: RouterOptions): Router</span></span>
<span class="line"><span> * @link 参考：https://next.router.vuejs.org/zh/api/#createrouter</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>export const router = createRouter({</span></span>
<span class="line"><span>	history: createWebHashHistory(),</span></span>
<span class="line"><span>	routes: [],</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default router</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="模块化" tabindex="-1">模块化 <a class="header-anchor" href="#模块化" aria-label="Permalink to &quot;模块化&quot;">​</a></h2><ul><li>不在需要创建 <code>modules</code> 使用，只需要在模块中导出即可</li><li>然后在 <code>src/router/index.js</code> 引入配置给 <code>routes</code> 即可</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// custom.js</span></span>
<span class="line"><span>export const custom = [</span></span>
<span class="line"><span>    { path: &#39;/custom/home&#39;, component: Home },</span></span>
<span class="line"><span>    { path: &#39;/custom/about&#39;, component: About },</span></span>
<span class="line"><span>]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,10)]))}const h=a(r,[["render",l]]);export{b as __pageData,h as default};
