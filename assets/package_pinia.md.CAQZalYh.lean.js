import{_ as s,c as n,o as e,a2 as p}from"./chunks/framework.CXlnX6pr.js";const d=JSON.parse('{"title":"pinia","description":"","frontmatter":{},"headers":[],"relativePath":"package/pinia.md","filePath":"package/pinia.md"}'),i={name:"package/pinia.md"};function l(r,a,t,c,o,b){return e(),n("div",null,a[0]||(a[0]=[p(`<h1 id="pinia" tabindex="-1">pinia <a class="header-anchor" href="#pinia" aria-label="Permalink to &quot;pinia&quot;">​</a></h1><p>数据存储，<code>vuex</code> 替代品</p><h2 id="安装-官网地址" tabindex="-1">安装 <a href="https://pinia.web3doc.top/" target="_blank" rel="noreferrer">官网地址</a> <a class="header-anchor" href="#安装-官网地址" aria-label="Permalink to &quot;安装 [官网地址](https://pinia.web3doc.top/)&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm install pinia</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p><a href="https://pinia.web3doc.top/" target="_blank" rel="noreferrer">Pinia</a> 已正式成为 Vue.js 官方状态库，如果你对 Pinia 还不熟悉，除了通过 Pinia 官网学习外，我还收集了一些文字/视频的介绍，可以帮助你快速上手</p><ul><li><a href="https://mp.weixin.qq.com/s/_OlLFedVJfyEapGzYFETuw" target="_blank" rel="noreferrer">欧耶！Pinia 正式成为 vuejs 的一员</a></li><li><a href="https://mp.weixin.qq.com/s/4B-ZzOXdYrF-Auvm_wWBVQ" target="_blank" rel="noreferrer">全新的 Vue3 状态管理工具：Pinia</a></li><li><a href="https://www.bilibili.com/video/BV1Mb4y1X7NL/" target="_blank" rel="noreferrer">【探索学习】面向未来的 Vuex -- pinia</a></li></ul></div><h2 id="使用配置" tabindex="-1">使用配置 <a class="header-anchor" href="#使用配置" aria-label="Permalink to &quot;使用配置&quot;">​</a></h2><ul><li><code>src/pinia/index.js</code></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import { createPinia } from &#39;pinia&#39; // pinia</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 创建 pinia</span></span>
<span class="line"><span>const pinia = createPinia()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 导出 pinia</span></span>
<span class="line"><span>export default pinia</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><code>src/main.js</code></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 数据存储</span></span>
<span class="line"><span>import pinia from &#39;@/pinia/index.js&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>app.use(pinia)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="模块化使用" tabindex="-1">模块化使用 <a class="header-anchor" href="#模块化使用" aria-label="Permalink to &quot;模块化使用&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 第一个参数(customId)是应用程序中 store 的唯一 id</span></span>
<span class="line"><span>export const useCustomId = defineStore(&#39;customId&#39;, {</span></span>
<span class="line"><span>	state: () =&gt; ({</span></span>
<span class="line"><span>		data: [], // 数据存储</span></span>
<span class="line"><span>	}),</span></span>
<span class="line"><span>	actions: {</span></span>
<span class="line"><span>		// 添加数据</span></span>
<span class="line"><span>		async setData(data) {</span></span>
<span class="line"><span>			this.data = data</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="页面中使用" tabindex="-1">页面中使用 <a class="header-anchor" href="#页面中使用" aria-label="Permalink to &quot;页面中使用&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>    {{ store.store }}</span></span>
<span class="line"><span>    {{ data }}</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script setup&gt;</span></span>
<span class="line"><span>import { useCustomId } from &#39;@/pinia/custom.js&#39; // 模块化的 pinia</span></span>
<span class="line"><span>const store = useCustomId() // 实例化</span></span>
<span class="line"><span>const { data } = storeToRefs(store) // 解构</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 这里使用的时候需要加 .value</span></span>
<span class="line"><span>data.value</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 使用方法</span></span>
<span class="line"><span>store.setData(&#39;需要存储的数据&#39;)</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="数据持久化" tabindex="-1">数据持久化 <a class="header-anchor" href="#数据持久化" aria-label="Permalink to &quot;数据持久化&quot;">​</a></h2><p>搭配 <a href="./pinia-plugin-persist.html">pinia-plugin-persist</a> 插件可以实现数据的持久化</p>`,16)]))}const m=s(i,[["render",l]]);export{d as __pageData,m as default};
